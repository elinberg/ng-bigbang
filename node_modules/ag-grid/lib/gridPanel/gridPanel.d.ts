// Type definitions for ag-grid v3.3.0-alpha.1
// Project: http://www.ag-grid.com/
// Definitions by: Niall Crosby <https://github.com/ceolter/>
// Definitions: https://github.com/borisyankov/DefinitelyTyped
import MasterSlaveService from "../masterSlaveService";
import GridOptionsWrapper from "../gridOptionsWrapper";
import { ColumnController } from "../columnController/columnController";
import RowRenderer from "../rendering/rowRenderer";
import FloatingRowModel from "../rowControllers/floatingRowModel";
import BorderLayout from "../layout/borderLayout";
import { LoggerFactory } from "../logger";
export default class GridPanel {
    private masterSlaveService;
    private gridOptionsWrapper;
    private columnController;
    private rowRenderer;
    private rowModel;
    private floatingRowModel;
    private layout;
    private logger;
    private forPrint;
    private scrollWidth;
    private scrollLagCounter;
    private eBodyViewport;
    private eRoot;
    private eBody;
    private eBodyContainer;
    private ePinnedLeftColsContainer;
    private ePinnedRightColsContainer;
    private eHeaderContainer;
    private ePinnedLeftHeader;
    private ePinnedRightHeader;
    private eHeader;
    private eParentsOfRows;
    private eBodyViewportWrapper;
    private ePinnedLeftColsViewport;
    private ePinnedRightColsViewport;
    private eHeaderViewport;
    private eFloatingTop;
    private ePinnedLeftFloatingTop;
    private ePinnedRightFloatingTop;
    private eFloatingTopContainer;
    private eFloatingBottom;
    private ePinnedLeftFloatingBottom;
    private ePinnedRightFloatingBottom;
    private eFloatingBottomContainer;
    private lastLeftPosition;
    private lastTopPosition;
    init(gridOptionsWrapper: GridOptionsWrapper, columnController: ColumnController, rowRenderer: RowRenderer, masterSlaveService: MasterSlaveService, loggerFactory: LoggerFactory, floatingRowModel: FloatingRowModel): void;
    getLayout(): BorderLayout;
    private setupComponents();
    getPinnedLeftFloatingTop(): HTMLElement;
    getPinnedRightFloatingTop(): HTMLElement;
    getFloatingTopContainer(): HTMLElement;
    getPinnedLeftFloatingBottom(): HTMLElement;
    getPinnedRightFloatingBottom(): HTMLElement;
    getFloatingBottomContainer(): HTMLElement;
    private createOverlayTemplate(name, defaultTemplate, userProvidedTemplate);
    private createLoadingOverlayTemplate();
    private createNoRowsOverlayTemplate();
    ensureIndexVisible(index: any): void;
    isHorizontalScrollShowing(): boolean;
    isVerticalScrollShowing(): boolean;
    periodicallyCheck(): void;
    ensureColIndexVisible(index: any): void;
    showLoadingOverlay(): void;
    showNoRowsOverlay(): void;
    hideOverlay(): void;
    private getWidthForSizeColsToFit();
    sizeColumnsToFit(nextTimeout?: number): void;
    setRowModel(rowModel: any): void;
    getBodyContainer(): HTMLElement;
    getBodyViewport(): HTMLElement;
    getPinnedLeftColsContainer(): HTMLElement;
    getPinnedRightColsContainer(): HTMLElement;
    getHeaderContainer(): HTMLElement;
    getRoot(): HTMLElement;
    getPinnedLeftHeader(): HTMLElement;
    getPinnedRightHeader(): HTMLElement;
    getRowsParent(): HTMLElement[];
    private queryHtmlElement(selector);
    private findElements();
    getHeaderViewport(): HTMLElement;
    private centerMouseWheelListener(event);
    private pinnedLeftMouseWheelListener(event);
    private generalMouseWheelListener(event, targetPanel);
    setBodyContainerWidth(): void;
    setPinnedColContainerWidth(): void;
    showPinnedColContainersIfNeeded(): void;
    onBodyHeightChange(): void;
    private sizeHeaderAndBody();
    private sizeHeaderAndBodyNormal();
    private sizeHeaderAndBodyForPrint();
    setHorizontalScrollPosition(hScrollPosition: number): void;
    private addScrollListener();
    private requestDrawVirtualRows();
    private horizontallyScrollHeaderCenterAndFloatingCenter(bodyLeftPosition);
    private verticallyScrollLeftPinned(bodyTopPosition);
    private verticallyScrollBody(position);
}
